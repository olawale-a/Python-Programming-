# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# Task 1: Read the CSV file using the pandas library
def read_csv(file_path):
    data = pd.read_csv(file_path)
    return data

# Task 2: Clean and preprocess the data
def clean_data(data):
    # Handle missing values
    data.dropna(inplace=True)

    # Remove duplicates
    data.drop_duplicates(inplace=True)

    return data

# Task 3: Perform basic statistical analysis
def perform_statistical_analysis(data):
    relevant_columns = ['column1', 'column2', 'column3']  # Replace with actual column names

    # Display mean, median, and standard deviation
    statistics = data[relevant_columns].describe()

    return statistics

# Task 4: Visualize key insights using matplotlib or seaborn
def visualize_data(data):
    # Example: Create a histogram for a specific column
    plt.figure(figsize=(10, 6))
    sns.histplot(data['column1'], bins=20, kde=True)
    plt.title('Distribution of Column 1')
    plt.xlabel('Values')
    plt.ylabel('Frequency')
    plt.show()

# Task 5: Export the cleaned data and visualizations to new files
def export_data_and_visualizations(cleaned_data, statistics):
    cleaned_data.to_csv('cleaned_data.csv', index=False)
    statistics.to_csv('statistics_summary.csv', index=False)

# Main function to orchestrate the workflow
def main():
    # Replace 'your_data.csv' with the actual path to your CSV file
    file_path = 'your_data.csv'

    # Task 1: Read the CSV file
    data = read_csv(file_path)

    # Task 2: Clean and preprocess the data
    cleaned_data = clean_data(data)

    # Task 3: Perform basic statistical analysis
    statistics = perform_statistical_analysis(cleaned_data)

    # Task 4: Visualize key insights
    visualize_data(cleaned_data)

    # Task 5: Export the cleaned data and visualizations to new files
    export_data_and_visualizations(cleaned_data, statistics)

if __name__ == "__main__":
    main()
